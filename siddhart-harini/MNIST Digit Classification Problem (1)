{"cells":[{"cell_type":"code","source":["\"\"\"\n","First Code - No C Parameter, Only Gamma Parameter - Not Used for Poster\n","Using Digits Dataset of Scikit, Not MNIST Dataset\n","\"\"\""],"metadata":{"id":"sRpzyF7V272x"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":418,"status":"ok","timestamp":1733225504550,"user":{"displayName":"Siddharth Kumar Gopal","userId":"01539500278853142447"},"user_tz":-330},"id":"jAVRTY9Be1in","outputId":"8061d033-2d2d-4660-f0ae-b3df4a2d08c2"},"outputs":[{"output_type":"stream","name":"stdout","text":["Classification Report for Classifier SVC(gamma=0.001):\n","              precision    recall  f1-score   support\n","\n","           0       0.99      0.99      0.99       123\n","           1       0.95      0.97      0.96       127\n","           2       0.98      0.97      0.98       122\n","           3       0.98      0.91      0.94       128\n","           4       0.98      0.96      0.97       128\n","           5       0.94      0.96      0.95       128\n","           6       0.99      0.98      0.98       128\n","           7       0.96      1.00      0.98       126\n","           8       0.93      0.93      0.93       121\n","           9       0.90      0.94      0.92       127\n","\n","    accuracy                           0.96      1258\n","   macro avg       0.96      0.96      0.96      1258\n","weighted avg       0.96      0.96      0.96      1258\n","\n","\n"]}],"source":["import matplotlib.pyplot as plt\n","from sklearn import datasets, metrics, svm\n","from sklearn.model_selection import train_test_split\n","\n","digits = datasets.load_digits()\n","\n","\"\"\"\n","_, axes = plt.subplots(nrows = 1, ncols = 4, figsize = (10, 3))\n","for ax, image, label in zip(axes, digits.images, digits.target):\n","    ax.set_axis_off()\n","    ax.imshow(image, cmap = plt.cm.gray_r, interpolation = \"nearest\")\n","    ax.set_title(\"Training: %i\" % label)\n","\"\"\"\n","\n","n_samples = len(digits.images)\n","data = digits.images.reshape((n_samples, -1))\n","clf = svm.SVC(gamma = 0.001)\n","\n","X_train, X_test, y_train, y_test = train_test_split(\n","    data, digits.target, test_size = 0.7, shuffle = False\n",")\n","\n","clf.fit(X_train, y_train)\n","predicted = clf.predict(X_test)\n","\n","\"\"\"\n","_, axes = plt.subplots(nrows=1, ncols=4, figsize=(10, 3))\n","for ax, image, prediction in zip(axes, X_test, predicted):\n","    ax.set_axis_off()\n","    image = image.reshape(8, 8)\n","    ax.imshow(image, cmap=plt.cm.gray_r, interpolation=\"nearest\")\n","    ax.set_title(f\"Prediction: {prediction}\")\n","\"\"\"\n","\n","print(\n","    f\"Classification Report for Classifier {clf}:\\n\"\n","    f\"{metrics.classification_report(y_test, predicted)}\\n\"\n",")"]},{"cell_type":"code","source":["\"\"\"\n","Code using MNIST Dataset - 10,000 Images\n","Used Fixed Hyperparameters:\n","Gamma = 0.05\n","C = 1\n","Generated Classification Report and Confusion Matrix\n","\"\"\""],"metadata":{"id":"jqGKLGbS3UMy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.datasets import fetch_openml\n","from sklearn.model_selection import train_test_split\n","from sklearn import svm, metrics\n","from matplotlib.colors import Normalize\n","\n","mnist = fetch_openml('mnist_784', version = 1, as_frame = False)\n","\n","X = mnist.data\n","y = mnist.target.astype(int)\n","\n","random_indices = np.random.choice(len(X), 10000, replace = False)\n","X_subset = X[random_indices]\n","y_subset = y[random_indices]\n","\n","X_subset = X_subset / 255.0\n","\n","X_train, X_test, y_train, y_test = train_test_split(X_subset, y_subset, test_size = 0.2, random_state = 42)\n","\n","param_C = 1.0\n","param_gamma = 0.05\n","classifier = svm.SVC(C = param_C, gamma = param_gamma)\n","\n","import datetime as dt\n","start_time = dt.datetime.now()\n","print(f\"Start learning at {start_time}\")\n","\n","classifier.fit(X_train, y_train)\n","\n","end_time = dt.datetime.now()\n","print(f\"Stop learning at {end_time}\")\n","elapsed_time = end_time - start_time\n","print(f\"Elapsed learning time: {elapsed_time}\")\n","\n","predicted = classifier.predict(X_test)\n","\n","print(\"Classification Report:\\n\", metrics.classification_report(y_test, predicted))\n","print(\"Accuracy:\", metrics.accuracy_score(y_test, predicted))\n","\n","cm = metrics.confusion_matrix(y_test, predicted)\n","\n","class HighContrastNormalize(Normalize):\n","    def __init__(self, vmin = None, vmax = None, midpoint = None, clip = False):\n","        super().__init__(vmin, vmax, clip)\n","        self.midpoint = midpoint\n","\n","    def __call__(self, value, clip = None):\n","        x, y = [self.vmin, self.midpoint, self.vmax], [0, 0.5, 1]\n","        return np.ma.masked_array(np.interp(value, x, y))\n","\n","plt.figure(figsize = (10, 8))\n","plt.imshow(\n","    cm,\n","    interpolation = 'nearest',\n","    cmap = plt.cm.coolwarm,\n","    norm = HighContrastNormalize(vmin = 0, vmax = cm.max(), midpoint = cm.max() / 2)\n",")\n","plt.title(\"High-Contrast Confusion Matrix\", fontsize = 16)\n","plt.colorbar()\n","classes = np.arange(10)\n","plt.xticks(classes, classes, fontsize = 12)\n","plt.yticks(classes, classes, fontsize = 12)\n","plt.ylabel(\"True Label\", fontsize = 14)\n","plt.xlabel(\"Predicted Label\", fontsize = 14)\n","\n","thresh = cm.max() / 2\n","for i in range(cm.shape[0]):\n","    for j in range(cm.shape[1]):\n","        plt.text(\n","            j, i, f\"{cm[i, j]}\",\n","            horizontalalignment = \"center\",\n","            color = \"white\" if cm[i, j] > thresh else \"black\"\n","        )\n","\n","plt.tight_layout()\n","plt.show()\n","\n","_, axes = plt.subplots(nrows = 2, ncols = 5, figsize = (10, 5))\n","for ax, image, true_label, prediction in zip(axes.flatten(), X_test[:10], y_test[:10], predicted[:10]):\n","    image = image.reshape(28, 28)\n","    ax.set_axis_off()\n","    ax.imshow(image, cmap = plt.cm.gray_r, interpolation = \"nearest\")\n","    ax.set_title(f\"True: {true_label}\\nPred: {prediction}\")\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"QE4sELJdUUSi","executionInfo":{"status":"ok","timestamp":1733227435385,"user_tz":-330,"elapsed":53329,"user":{"displayName":"Siddharth Kumar Gopal","userId":"01539500278853142447"}},"outputId":"843f2fc6-56ef-47e8-fca6-81800a7eb3c2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Start learning at 2024-12-03 12:03:13.908212\n","Stop learning at 2024-12-03 12:03:42.315214\n","Elapsed learning time: 0:00:28.407002\n","Classification Report:\n","               precision    recall  f1-score   support\n","\n","           0       0.98      1.00      0.99       213\n","           1       1.00      0.99      0.99       235\n","           2       0.95      0.97      0.96       225\n","           3       0.97      0.95      0.96       187\n","           4       0.97      0.97      0.97       175\n","           5       0.98      0.97      0.98       198\n","           6       0.99      0.96      0.97       181\n","           7       0.96      0.99      0.98       192\n","           8       0.96      0.97      0.96       193\n","           9       0.99      0.97      0.98       201\n","\n","    accuracy                           0.98      2000\n","   macro avg       0.98      0.97      0.98      2000\n","weighted avg       0.98      0.98      0.98      2000\n","\n","Accuracy: 0.9755\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x800 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x500 with 10 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["\"\"\"\n","Looped the Gamma Hyperparameter with C = 1\n","\"\"\""],"metadata":{"id":"Qb8x8uO94j-L"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.datasets import fetch_openml\n","from sklearn.model_selection import train_test_split\n","from sklearn import svm, metrics\n","import datetime as dt\n","\n","mnist = fetch_openml('mnist_784', version=1, as_frame = False)\n","\n","X = mnist.data\n","y = mnist.target.astype(int)\n","\n","random_indices = np.random.choice(len(X), 10000, replace = False)\n","X_subset = X[random_indices]\n","y_subset = y[random_indices]\n","\n","X_subset = X_subset / 255.0\n","\n","X_train, X_test, y_train, y_test = train_test_split(X_subset, y_subset, test_size = 0.2, random_state = 42)\n","\n","param_C = 1.0\n","gamma_values = np.arange(0.001, 1, 0.005)\n","\n","accuracies = []\n","learning_times = []\n","\n","for gamma in gamma_values:\n","    classifier = svm.SVC(C = param_C, gamma = gamma)\n","\n","    start_time = dt.datetime.now()\n","    classifier.fit(X_train, y_train)\n","    end_time = dt.datetime.now()\n","\n","    elapsed_time = (end_time - start_time).total_seconds()\n","    learning_times.append(elapsed_time)\n","\n","    predicted = classifier.predict(X_test)\n","    accuracy = metrics.accuracy_score(y_test, predicted)\n","    accuracies.append(accuracy)\n","\n","    print(f\"Gamma: {gamma:.5f}, Accuracy: {accuracy:.4f}, Learning Time: {elapsed_time:.2f}s\")"],"metadata":{"id":"Uxga5DcAc-ym"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\"\"\"\n","Values were taken out and a graph was made using matplotlib.\n","\"\"\""],"metadata":{"id":"L_nuLGRc5unn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\"\"\"\n","Looping the C Hyperparameter with Gamma = 0.026, the value of Gamma where accuracy peaked.\n","\"\"\""],"metadata":{"id":"6iZhUogm6-Oi"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.datasets import fetch_openml\n","from sklearn.model_selection import train_test_split\n","from sklearn import svm, metrics\n","import datetime as dt\n","\n","mnist = fetch_openml('mnist_784', version=1, as_frame = False)\n","\n","X = mnist.data\n","y = mnist.target.astype(int)\n","\n","random_indices = np.random.choice(len(X), 10000, replace = False)\n","X_subset = X[random_indices]\n","y_subset = y[random_indices]\n","\n","X_subset = X_subset / 255.0\n","\n","X_train, X_test, y_train, y_test = train_test_split(X_subset, y_subset, test_size = 0.2, random_state = 42)\n","\n","param_C_values = np.arange(0.01, 2, 0.01)\n","gamma = 0.026\n","\n","accuracies = []\n","learning_times = []\n","\n","for param_C in param_C_values:\n","    classifier = svm.SVC(C = param_C, gamma = gamma)\n","\n","    start_time = dt.datetime.now()\n","    classifier.fit(X_train, y_train)\n","    end_time = dt.datetime.now()\n","\n","    elapsed_time = (end_time - start_time).total_seconds()\n","    learning_times.append(elapsed_time)\n","\n","    predicted = classifier.predict(X_test)\n","    accuracy = metrics.accuracy_score(y_test, predicted)\n","    accuracies.append(accuracy)\n","\n","    print(f\"C Parameter: {param_C:.5f}, Accuracy: {accuracy:.4f}, Learning Time: {elapsed_time:.2f}s\")"],"metadata":{"id":"YR27iPDe7BKr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Moving on to MLP with Quantum Approach"],"metadata":{"id":"GpKSV-TCDRDd"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3410,"status":"ok","timestamp":1733225340253,"user":{"displayName":"Siddharth Kumar Gopal","userId":"01539500278853142447"},"user_tz":-330},"id":"cj649e9EWVgC","outputId":"956321e4-de9d-4b79-a044-07b4ef8f8754"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pennylane in /usr/local/lib/python3.10/dist-packages (0.39.0)\n","Requirement already satisfied: numpy<2.1 in /usr/local/lib/python3.10/dist-packages (from pennylane) (1.26.4)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.10/dist-packages (from pennylane) (1.13.1)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from pennylane) (3.4.2)\n","Requirement already satisfied: rustworkx>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from pennylane) (0.15.1)\n","Requirement already satisfied: autograd in /usr/local/lib/python3.10/dist-packages (from pennylane) (1.7.0)\n","Requirement already satisfied: toml in /usr/local/lib/python3.10/dist-packages (from pennylane) (0.10.2)\n","Requirement already satisfied: appdirs in /usr/local/lib/python3.10/dist-packages (from pennylane) (1.4.4)\n","Requirement already satisfied: autoray>=0.6.11 in /usr/local/lib/python3.10/dist-packages (from pennylane) (0.7.0)\n","Requirement already satisfied: cachetools in /usr/local/lib/python3.10/dist-packages (from pennylane) (5.5.0)\n","Requirement already satisfied: pennylane-lightning>=0.39 in /usr/local/lib/python3.10/dist-packages (from pennylane) (0.39.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from pennylane) (2.32.3)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from pennylane) (4.12.2)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from pennylane) (24.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->pennylane) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->pennylane) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->pennylane) (2.2.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->pennylane) (2024.8.30)\n"]}],"source":["#Importing Necessary Libraries\n","!pip install pennylane\n","import pennylane as qml\n","import numpy as np\n","from sklearn.datasets import fetch_openml\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.model_selection import cross_val_score\n","from sklearn.neural_network import MLPClassifier"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"s5eVjFZMWkOW"},"outputs":[],"source":["#Loading MNIST Dataset\n","mnist = fetch_openml('mnist_784',version=1)\n","X,y = mnist.data / 255.0, mnist.target.astype(int)\n","X_train , X_test ,y_train , y_test = train_test_split(X,y,test_size=0.2,random_state=42)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":377,"status":"ok","timestamp":1733228235170,"user":{"displayName":"Siddharth Kumar Gopal","userId":"01539500278853142447"},"user_tz":-330},"id":"qnpzcUN1xtWw","outputId":"f6dae2c3-408f-4d0b-b739-701574624af8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Training data dimension:(8000, 784),Test data dimension:(2000, 784)\n","Training labels dimension:(8000,),Test labels dimension:(2000,)\n"]}],"source":["#feature scaling and data preprocessing\n","scaler = StandardScaler()\n","X_train = scaler.fit_transform(X_train)\n","X_test = scaler.transform(X_test)\n","print(f\"Training data dimension:{X_train.shape},Test data dimension:{X_test.shape}\")\n","print(f\"Training labels dimension:{y_train.shape},Test labels dimension:{y_test.shape}\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":407,"status":"ok","timestamp":1733228238037,"user":{"displayName":"Siddharth Kumar Gopal","userId":"01539500278853142447"},"user_tz":-330},"id":"2q-JMkQ-z4Eq","outputId":"547aca14-a12d-41f5-9dac-6743b6e1996f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Quantum Circuit:\n","0: ──RX(3.00)──┤  <Z>\n","1: ──RX(-1.10)─┤  <Z>\n","2: ──RX(-0.18)─┤  <Z>\n","Testing quantum circuit with params:[ 2.99742779 -1.09737333 -0.17626929]\n","Quantum circuit output:[-0.9896262315339532, 0.45593546069885144, 0.9845047525219398]\n"]}],"source":["#Quantum Device setup\n","n_qubits = 3\n","dev = qml.device('default.qubit',wires=(n_qubits))\n","\n","#Defining Quantum Circuits\n","@qml.qnode(dev)\n","def Quantum_Circ(p):\n","  for i in range(n_qubits):\n","    qml.RX(p[i],wires=i)\n","  return[qml.expval(qml.PauliZ(i)) for i in range(n_qubits)]\n","\n","#Visualizing and Testing the Quantum Circuit\n","test_params = np.random.uniform(-np.pi,np.pi,n_qubits)\n","print('Quantum Circuit:')\n","print(qml.draw(Quantum_Circ)(test_params))\n","print(f\"Testing quantum circuit with params:{test_params}\")\n","qvalues = Quantum_Circ(test_params)\n","print(f\"Quantum circuit output:{qvalues}\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":320,"status":"ok","timestamp":1733228242659,"user":{"displayName":"Siddharth Kumar Gopal","userId":"01539500278853142447"},"user_tz":-330},"id":"bKjhLuw63kkR","outputId":"3bba5033-c08d-424c-e1df-6dce58afcd5b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Translated hyperparameter:(0.0006181697348790358, 245, 0.14840202477694178)\n"]}],"source":["#Translating Quantum Output to Hyperparameters\n","def translate_quantum_to_classic(qvalues):\n","  #learning_rate- Maps qvalues between -1 and 1 to Appropriate range between 0.0001 and 0.1\n","  learning_rate = 0.0001 + (0.1 - 0.0001)*((qvalues[0] + 1)/2)\n","  #num_neurons- Maps qvalues between -1 and 1 to Appropriate range between 16 and 256\n","  num_neurons = int(16 + (256 - 16)*((qvalues[1] + 1 / 2)))\n","  #alpha- Maps qvalue between -1 and 1 to Appropriate range between 0.0001 and 0.1\n","  alpha = 0.0001 + (0.1 - 0.0001)*((qvalues[2] + 1 / 2))\n","  return learning_rate,num_neurons,alpha\n","\n","print(f\"Translated hyperparameter:{translate_quantum_to_classic(qvalues)}\")\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27619,"status":"ok","timestamp":1733228272635,"user":{"displayName":"Siddharth Kumar Gopal","userId":"01539500278853142447"},"user_tz":-330},"id":"vGwtUGqJ53Kq","outputId":"09643b72-d47b-4e4f-ba43-c983a151348b"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (20) reached and the optimization hasn't converged yet.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (20) reached and the optimization hasn't converged yet.\n","  warnings.warn(\n"]},{"output_type":"stream","name":"stdout","text":["cross-validation scores:[0.94375703 0.9343832  0.94073518]\n","Fitness for test quantum values[-0.9896262315339532, 0.45593546069885144, 0.9845047525219398]:0.9396251387556301\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:690: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (20) reached and the optimization hasn't converged yet.\n","  warnings.warn(\n"]}],"source":["#Fitness Function for Mlp Evalution\n","def fitness_function(qvalues):\n","  try:\n","    learning_rate , num_neurons , alpha = translate_quantum_to_classic(qvalues)\n","    model = MLPClassifier(hidden_layer_sizes=(num_neurons,),learning_rate_init=learning_rate,alpha = alpha, max_iter=20)\n","    cv_scores = cross_val_score(model,X_train,y_train,cv=3,scoring='accuracy')\n","    print(f\"cross-validation scores:{cv_scores}\")\n","    return np.mean(cv_scores)\n","  except Exception as e:\n","    print(f\"Error during fitness evalution:{e}\")\n","    return -np.pi\n","\n","#Running the Fitness Function\n","test_qvalues = Quantum_Circ(test_params)\n","print(f\"Fitness for test quantum values{test_qvalues}:{fitness_function(test_qvalues)}\")"]},{"cell_type":"markdown","source":[" Evaluation Results :\n","  \n","  Cross-Validation scores:\n","  Fold1: 0.94375703 ,Fold2: 0.9343832 , Fold3: 0.94073518\n","  \n","  Average Accuracy:\n","  0.9396251387556301\n","  \n","  Fitness for test quantum values:\n","  [-0.9896262315339532, 0.45593546069885144, 0.9845047525219398]\n","\n","\n",">\n","\n"],"metadata":{"id":"inS80IjjJ8RL"}},{"cell_type":"code","source":["#Visualizing Cross-Validation fold scores and Fitness score For Model  Performance Comparison using Bar Graph\n","import matplotlib.pyplot as plt\n","import numpy as np\n","cv_scores = [0.94375703,0.9343832,0.94073518]\n","fitness_score = 0.9396251387556301\n","labels = ['Fold 1', 'Fold 2', 'Fold 3']\n","plt.figure(figsize=(8,6))\n","bars = plt.bar(labels, cv_scores, color=['#4CAF50','#2196F3','#FFC107'],alpha=0.8)\n","plt.axhline(y=fitness_score, color='red', linestyle='--',linewidth=1.5,label=f'Fitness score:{fitness_score:4f}')\n","for bar,score in zip(bars, cv_scores):\n","  plt.text(bar.get_x() + bar.get_width() / 2, bar.get_height() + 0.003,f'{score:.4f}', ha='center',fontsize=10)\n","plt.title('Cross-Validation scores and Fitness score', fontsize=14)\n","plt.ylabel('Accuracy', fontsize=12)\n","plt.xlabel('Cross-Validation Folds', fontsize=12)\n","plt.legend()\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"id":"LP2gtec2u9Rw","colab":{"base_uri":"https://localhost:8080/","height":607},"executionInfo":{"status":"ok","timestamp":1733323456731,"user_tz":-330,"elapsed":838,"user":{"displayName":"Harini M","userId":"00995083050531423504"}},"outputId":"c865ab64-1250-4339-e279-39805209d76b"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}