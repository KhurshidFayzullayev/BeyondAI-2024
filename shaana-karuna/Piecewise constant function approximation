{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMhrRx0JqXq123AmrmUuFbp",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "f72b550df4c248339b14023b17718197": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "y=sin(6x)",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_2203cf357e914dfda82379431009fa1d",
            "style": "IPY_MODEL_dca16ec845f043ff8c141cdc440c5db1",
            "tooltip": ""
          }
        },
        "2203cf357e914dfda82379431009fa1d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "50px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": "200px"
          }
        },
        "dca16ec845f043ff8c141cdc440c5db1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": "black",
            "font_weight": "bold"
          }
        },
        "dfff1550f2364d148fd8b123d4ef155b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "y=0.05(7x-2)^2(7x-6)^2",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_9f5b6be7b68d4e099b953d70ddd59bcd",
            "style": "IPY_MODEL_fe12bec0954a4bf0b1efd7fa5bb38025",
            "tooltip": ""
          }
        },
        "9f5b6be7b68d4e099b953d70ddd59bcd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "50px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": "200px"
          }
        },
        "fe12bec0954a4bf0b1efd7fa5bb38025": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": "black",
            "font_weight": "bold"
          }
        },
        "a9a523c49e864eb58a70690b3279f41d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_dom_classes": [],
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/controls",
            "_view_module_version": "1.5.0",
            "_view_name": "ButtonView",
            "button_style": "",
            "description": "y=e^(x-1)",
            "disabled": false,
            "icon": "",
            "layout": "IPY_MODEL_844e2a1187ff41d481449567c0d5ba96",
            "style": "IPY_MODEL_2deb90837fad460696f8511c0f36f107",
            "tooltip": ""
          }
        },
        "844e2a1187ff41d481449567c0d5ba96": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_model_module": "@jupyter-widgets/base",
            "_model_module_version": "1.2.0",
            "_model_name": "LayoutModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "LayoutView",
            "align_content": null,
            "align_items": null,
            "align_self": null,
            "border": null,
            "bottom": null,
            "display": null,
            "flex": null,
            "flex_flow": null,
            "grid_area": null,
            "grid_auto_columns": null,
            "grid_auto_flow": null,
            "grid_auto_rows": null,
            "grid_column": null,
            "grid_gap": null,
            "grid_row": null,
            "grid_template_areas": null,
            "grid_template_columns": null,
            "grid_template_rows": null,
            "height": "50px",
            "justify_content": null,
            "justify_items": null,
            "left": null,
            "margin": null,
            "max_height": null,
            "max_width": null,
            "min_height": null,
            "min_width": null,
            "object_fit": null,
            "object_position": null,
            "order": null,
            "overflow": null,
            "overflow_x": null,
            "overflow_y": null,
            "padding": null,
            "right": null,
            "top": null,
            "visibility": null,
            "width": "200px"
          }
        },
        "2deb90837fad460696f8511c0f36f107": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_model_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_model_name": "ButtonStyleModel",
            "_view_count": null,
            "_view_module": "@jupyter-widgets/base",
            "_view_module_version": "1.2.0",
            "_view_name": "StyleView",
            "button_color": "black",
            "font_weight": "bold"
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ThinkingBeyond/BeyondAI-2024/blob/main/Approximation_Using_a_Piecewise_Constant_Function_in_2D_Final.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 179,
          "referenced_widgets": [
            "f72b550df4c248339b14023b17718197",
            "2203cf357e914dfda82379431009fa1d",
            "dca16ec845f043ff8c141cdc440c5db1",
            "dfff1550f2364d148fd8b123d4ef155b",
            "9f5b6be7b68d4e099b953d70ddd59bcd",
            "fe12bec0954a4bf0b1efd7fa5bb38025",
            "a9a523c49e864eb58a70690b3279f41d",
            "844e2a1187ff41d481449567c0d5ba96",
            "2deb90837fad460696f8511c0f36f107"
          ]
        },
        "id": "NGZghxXGEvuf",
        "outputId": "758ebd20-17ca-4151-fb4d-9cc36c506025"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Button(description='y=sin(6x)', layout=Layout(height='50px', width='200px'), style=ButtonStyle(button_color='b…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "f72b550df4c248339b14023b17718197"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Button(description='y=0.05(7x-2)^2(7x-6)^2', layout=Layout(height='50px', width='200px'), style=ButtonStyle(bu…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "dfff1550f2364d148fd8b123d4ef155b"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Button(description='y=e^(x-1)', layout=Layout(height='50px', width='200px'), style=ButtonStyle(button_color='b…"
            ],
            "application/vnd.jupyter.widget-view+json": {
              "version_major": 2,
              "version_minor": 0,
              "model_id": "a9a523c49e864eb58a70690b3279f41d"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "#Importing all necessary libraries\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from ipywidgets import interact\n",
        "import ipywidgets as widgets\n",
        "from IPython.display import display\n",
        "import math\n",
        "\n",
        "#Creating a function which applies the chosen function\n",
        "def function(input):\n",
        "  if chosen_func == 1:\n",
        "    return math.sin(6*input)\n",
        "  elif chosen_func == 2:\n",
        "    return 0.05*((7*input-2)**2)*((7*input-6)**2)\n",
        "  elif chosen_func == 3:\n",
        "    return (math.e)**(input-1)\n",
        "\n",
        "#Creating the piecewise function, using the function chosen\n",
        "def piecewise_function(x, n_sections):\n",
        "    y_1 = np.piecewise(x,\n",
        "                        [((i / n_sections) <= x) & (x < ((i + 1) / n_sections)) for i in range(n_sections)],\n",
        "                        [lambda x, i=i: function(i/n_sections) for i in range(n_sections)])\n",
        "    y_1[999] = function(1)\n",
        "    return y_1\n",
        "\n",
        "#Plotting both functions\n",
        "def plot_piecewise(n_sections):\n",
        "    x = np.linspace(0, 1, 1000)\n",
        "    y = piecewise_function(x, n_sections)\n",
        "\n",
        "    plt.figure(figsize=(8, 4))\n",
        "    ax = plt.gca()\n",
        "    ax.set_facecolor('#17282A')\n",
        "    plt.plot(x, y, label=f'{n_sections} sections', color=\"#F5F5DD\")\n",
        "    plt.plot(x, [function(i) for i in x], color='#93C280')\n",
        "    plt.title(\"Approximation Using a Piecewise Constant Function in 2D\")\n",
        "    plt.xlabel(\"x\")\n",
        "    plt.ylabel(\"y\")\n",
        "    plt.grid()\n",
        "    plt.legend()\n",
        "    plt.show()\n",
        "\n",
        "\n",
        "\n",
        "#For when button is clicked when the function is chosen\n",
        "def sin_clicked(b):\n",
        "  global chosen_func\n",
        "  chosen_func = 1\n",
        "  interact(plot_piecewise, n_sections=(1, 100, 1))\n",
        "def quartic_clicked(b):\n",
        "  global chosen_func\n",
        "  chosen_func = 2\n",
        "  interact(plot_piecewise, n_sections=(1, 100, 1))\n",
        "def exp_clicked(b):\n",
        "  global chosen_func\n",
        "  chosen_func = 3\n",
        "  interact(plot_piecewise, n_sections=(1, 100, 1))\n",
        "\n",
        "\n",
        "#Defining buttons for choosing the continuous functiom\n",
        "sin_button = widgets.Button(description=\"y=sin(6x)\", layout=widgets.Layout(width='200px', height='50px'),\n",
        "    style=widgets.ButtonStyle(\n",
        "        button_color='black',\n",
        "        color='black',\n",
        "        font_weight='bold'))\n",
        "sin_button.on_click(sin_clicked)\n",
        "display(sin_button)\n",
        "quartic_button = widgets.Button(description=\"y=0.05(7x-2)^2(7x-6)^2\", layout=widgets.Layout(width='200px', height='50px'),\n",
        "    style=widgets.ButtonStyle(\n",
        "        button_color='black',\n",
        "        font_weight='bold'))\n",
        "quartic_button.on_click(quartic_clicked)\n",
        "display(quartic_button)\n",
        "exp_button = widgets.Button(description=\"y=e^(x-1)\", layout=widgets.Layout(width='200px', height='50px'),\n",
        "    style=widgets.ButtonStyle(\n",
        "        button_color='black',\n",
        "        font_weight='bold'))\n",
        "exp_button.on_click(exp_clicked)\n",
        "display(exp_button)"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "gfRFbJFrkc8W"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
